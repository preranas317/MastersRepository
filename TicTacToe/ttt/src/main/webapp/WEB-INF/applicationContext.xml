<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd
        ">

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/ttt" />
        <property name="username" value="ttt" />
        <property name="password" value="abcd" />
        <property name="initialSize" value="1" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="ttt" />
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <context:annotation-config />

    <tx:annotation-driven />

    <context:component-scan base-package="ttt.model" />
<context:component-scan base-package="ttt.service" />

<security:authentication-manager>
    <security:authentication-provider>
        <security:jdbc-user-service users-by-username-query="select username,password,1 as enabled from players where username=?"
        							authorities-by-username-query="select p.username, a.authority
    from players p, authorities a
    where p.username = ? and p.username = a.username"
        							
            data-source-ref="dataSource" />
    </security:authentication-provider>
</security:authentication-manager>


<security:http auto-config="true" use-expressions="true">
    <security:intercept-url pattern="/user/*"
        access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
</security:http>

<security:global-method-security
	pre-post-annotations="enabled" />

</beans>